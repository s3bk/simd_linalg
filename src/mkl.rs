/* automatically generated by rust-bindgen 0.57.0 */

pub const MKL_THREADING_SEQUENTIAL: u32 = 1;
pub const MKL_LAYOUT_MKL_ROW_MAJOR: MKL_LAYOUT = 101;
pub const MKL_LAYOUT_MKL_COL_MAJOR: MKL_LAYOUT = 102;
pub type MKL_LAYOUT = ::std::os::raw::c_uint;
pub const MKL_TRANSPOSE_MKL_NOTRANS: MKL_TRANSPOSE = 111;
pub const MKL_TRANSPOSE_MKL_TRANS: MKL_TRANSPOSE = 112;
pub const MKL_TRANSPOSE_MKL_CONJTRANS: MKL_TRANSPOSE = 113;
pub type MKL_TRANSPOSE = ::std::os::raw::c_uint;
pub type sgemm_jit_kernel_t = ::std::option::Option<
    unsafe extern "C" fn(
        arg1: *mut ::std::os::raw::c_void,
        arg2: *mut f32,
        arg3: *mut f32,
        arg4: *mut f32,
    ),
>;
pub const mkl_jit_status_t_MKL_JIT_SUCCESS: mkl_jit_status_t = 0;
pub const mkl_jit_status_t_MKL_NO_JIT: mkl_jit_status_t = 1;
pub const mkl_jit_status_t_MKL_JIT_ERROR: mkl_jit_status_t = 2;
pub type mkl_jit_status_t = ::std::os::raw::c_uint;
extern "C" {
    pub fn mkl_cblas_jit_create_sgemm(
        jitter: *mut *mut ::std::os::raw::c_void,
        layout: MKL_LAYOUT,
        transa: MKL_TRANSPOSE,
        transb: MKL_TRANSPOSE,
        m: ::std::os::raw::c_longlong,
        n: ::std::os::raw::c_longlong,
        k: ::std::os::raw::c_longlong,
        alpha: f32,
        lda: ::std::os::raw::c_longlong,
        ldb: ::std::os::raw::c_longlong,
        beta: f32,
        ldc: ::std::os::raw::c_longlong,
    ) -> mkl_jit_status_t;
}
extern "C" {
    pub fn mkl_jit_get_sgemm_ptr(jitter: *const ::std::os::raw::c_void) -> sgemm_jit_kernel_t;
}
extern "C" {
    pub fn mkl_jit_destroy(jitter: *mut ::std::os::raw::c_void) -> mkl_jit_status_t;
}
extern "C" {
    pub fn MKL_Set_Threading_Layer(code: ::std::os::raw::c_int) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn sgemm_direct(
        transa: *const ::std::os::raw::c_char,
        transb: *const ::std::os::raw::c_char,
        m: *const ::std::os::raw::c_longlong,
        n: *const ::std::os::raw::c_longlong,
        k: *const ::std::os::raw::c_longlong,
        alpha: *const f32,
        a: *const f32,
        lda: *const ::std::os::raw::c_longlong,
        b: *const f32,
        ldb: *const ::std::os::raw::c_longlong,
        beta: *const f32,
        c: *mut f32,
        ldc: *const ::std::os::raw::c_longlong,
        flag: *const ::std::os::raw::c_longlong,
    );
}
